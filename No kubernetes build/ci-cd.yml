name: CI/CD Pipeline for HMIS Microservices

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [auth, admin, doc, reception, pharmacy]
        
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Define Image Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/hmis-${{ matrix.service }}
          tags: |
            type=sha,prefix=,format=short

      # ------------------------
      # DEVSECOPS - SHIFT LEFT 
      # ------------------------
      - name: Scan application dependencies with Snyk
        uses: snyk/actions/php@0.4.0
        continue-on-error: true # Don't fail the build on vulnerability find, just report.
        with:
          command: monitor
          args: --file=./${{ matrix.service }}-service/composer.json
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # ------------------------
      # BUILD AND PUSH 
      # ------------------------
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}-service
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # ------------------------
      # DEVSECOPS - CONTAINER SCANNING
      # ------------------------
      - name: Scan container image with Trivy
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ${{ steps.meta.outputs.tags }}
          format: 'table'
          severity: 'HIGH,CRITICAL'
          exit-code: '1'

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-scan
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Deploy to Server with Ansible
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            ansible-playbook --version
            ansible-playbook -i "${{ env.VM_HOST }}," ./ansible/playbook.yml \
              --extra-vars "docker_tag=${{ github.sha }} \
              docker_registry_username=${{ secrets.DOCKER_USERNAME }} \
              docker_registry_password=${{ secrets.DOCKER_PASSWORD }}"





